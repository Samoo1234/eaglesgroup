import React, { useState, useEffect } from 'react';
import { 
  Box, 
  CssBaseline, 
  Drawer, 
  AppBar, 
  Toolbar, 
  List, 
  Typography, 
  Divider, 
  IconButton, 
  Container, 
  Grid, 
  Paper, 
  ListItem, 
  ListItemIcon, 
  ListItemText, 
  Avatar,
  useTheme,
  useMediaQuery
} from '@mui/material';
import { useNavigate, useLocation, Outlet } from 'react-router-dom';
import { useSelector } from 'react-redux';
import MenuIcon from '@mui/icons-material/Menu';
import ChevronLeftIcon from '@mui/icons-material/ChevronLeft';
import DashboardIcon from '@mui/icons-material/Dashboard';
import PeopleIcon from '@mui/icons-material/People';
import BarChartIcon from '@mui/icons-material/BarChart';
import LayersIcon from '@mui/icons-material/Layers';
import AssignmentIcon from '@mui/icons-material/Assignment';
import InventoryIcon from '@mui/icons-material/Inventory';
import AttachMoneyIcon from '@mui/icons-material/AttachMoney';
import BusinessIcon from '@mui/icons-material/Business';
import ConstructionIcon from '@mui/icons-material/Construction';
import CleaningServicesIcon from '@mui/icons-material/CleaningServices';
import AccountCircleIcon from '@mui/icons-material/AccountCircle';
import ExitToAppIcon from '@mui/icons-material/ExitToApp';
import CompanySelector from '../components/CompanySelector';

// Stats components
import StatsCard from '../components/dashboard/StatsCard';
import RecentProjects from '../components/dashboard/RecentProjects';
import UpcomingTasks from '../components/dashboard/UpcomingTasks';
import FinancialSummary from '../components/dashboard/FinancialSummary';

const drawerWidth = 240;

const Dashboard = () => {
  const [open, setOpen] = useState(true);
  const { user, currentCompany } = useSelector((state) => state.auth);
  const navigate = useNavigate();
  const location = useLocation();
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));

  // Close drawer on mobile by default
  useEffect(() => {
    if (isMobile) {
      setOpen(false);
    }
  }, [isMobile]);

  // Handle drawer open/close
  const toggleDrawer = () => {
    setOpen(!open);
  };

  // Get company type icon
  const getCompanyIcon = (type) => {
    switch (type) {
      case 'construction':
        return <ConstructionIcon />;
      case 'concrete':
        return <BusinessIcon />;
      case 'cleaning':
        return <CleaningServicesIcon />;
      default:
        return <BusinessIcon />;
    }
  };

  // Check if current path is dashboard root
  const isDashboardRoot = location.pathname === '/dashboard';

  // Get company-specific menu items based on company type
  const getCompanyMenuItems = () => {
    if (!currentCompany) return [];

    const commonItems = [
      { name: 'Clientes', icon: <PeopleIcon />, path: '/dashboard/clients' },
      { name: 'Financeiro', icon: <AttachMoneyIcon />, path: '/dashboard/finance' },
      { name: 'Pessoal', icon: <PeopleIcon />, path: '/dashboard/personnel' },
      { name: 'Projetos', icon: <AssignmentIcon />, path: '/dashboard/projects' },
      { name: 'Relatórios', icon: <BarChartIcon />, path: '/dashboard/reports' },
    ];

    // Add company-specific menu items
    switch (currentCompany.type) {
      case 'construction':
        return [
          ...commonItems,
          { name: 'Materiais', icon: <InventoryIcon />, path: '/dashboard/materials' },
        ];
      case 'concrete':
        return [
          ...commonItems,
          { name: 'Produção', icon: <LayersIcon />, path: '/dashboard/production' },
          { name: 'Estoque', icon: <InventoryIcon />, path: '/dashboard/inventory' },
        ];
      case 'cleaning':
        return [
          ...commonItems,
          { name: 'Agendamentos', icon: <LayersIcon />, path: '/dashboard/schedules' },
          { name: 'Suprimentos', icon: <InventoryIcon />, path: '/dashboard/supplies' },
        ];
      default:
        return commonItems;
    }
  };

  return (
    <Box sx={{ display: 'flex' }}>
      <CssBaseline />
      <AppBar
        position="fixed"
        sx={{
          zIndex: theme.zIndex.drawer + 1,
          transition: theme.transitions.create(['width', 'margin'], {
            easing: theme.transitions.easing.sharp,
            duration: theme.transitions.duration.leavingScreen,
          }),
          ...(open && {
            marginLeft: drawerWidth,
            width: `calc(100% - ${drawerWidth}px)`,
            transition: theme.transitions.create(['width', 'margin'], {
              easing: theme.transitions.easing.sharp,
              duration: theme.transitions.duration.enteringScreen,
            }),
          }),
        }}
      >
        <Toolbar>
          <IconButton
            edge="start"
            color="inherit"
            aria-label="open drawer"
            onClick={toggleDrawer}
            sx={{
              marginRight: '36px',
              ...(open && { display: 'none' }),
            }}
          >
            <MenuIcon />
          </IconButton>
          <Typography
            component="h1"
            variant="h6"
            color="inherit"
            noWrap
            sx={{ flexGrow: 0 }}
          >
            Dashboard
          </Typography>
          
          <CompanySelector />
          
          <Box sx={{ flexGrow: 1 }} />
          
          <Box sx={{ display: 'flex', alignItems: 'center' }}>
            {user && (
              <>
                <Typography variant="body2" sx={{ mr: 2 }}>
                  {user.firstName} {user.lastName}
                </Typography>
                {user.profileImage ? (
                  <Avatar 
                    src={user.profileImage} 
                    alt={`${user.firstName} ${user.lastName}`} 
                  />
                ) : (
                  <AccountCircleIcon />
                )}
              </>
            )}
          </Box>
        </Toolbar>
      </AppBar>
      <Drawer
        variant={isMobile ? "temporary" : "permanent"}
        open={open}
        sx={{
          width: drawerWidth,
          flexShrink: 0,
          '& .MuiDrawer-paper': {
            width: drawerWidth,
            boxSizing: 'border-box',
          },
        }}
      >
        <Toolbar
          sx={{
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'flex-end',
            px: [1],
          }}
        >
          <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', px: 2 }}>
            {currentCompany && (
              <>
                {getCompanyIcon(currentCompany.type)}
                <Typography variant="subtitle1" sx={{ ml: 1, fontWeight: 'bold' }}>
                  {currentCompany.name}
                </Typography>
              </>
            )}
          </Box>
          <IconButton onClick={toggleDrawer}>
            <ChevronLeftIcon />
          </IconButton>
        </Toolbar>
        <Divider />
        <List>
          <ListItem button onClick={() => navigate('/dashboard')} selected={isDashboardRoot}>
            <ListItemIcon>
              <DashboardIcon />
            </ListItemIcon>
            <ListItemText primary="Visão Geral" />
          </ListItem>
          
          {getCompanyMenuItems().map((item) => (
            <ListItem 
              button 
              key={item.name} 
              onClick={() => navigate(item.path)}
              selected={location.pathname === item.path}
            >
              <ListItemIcon>
                {item.icon}
              </ListItemIcon>
              <ListItemText primary={item.name} />
            </ListItem>
          ))}
        </List>
        <Divider />
        <List>
          <ListItem button onClick={() => navigate('/profile')}>
            <ListItemIcon>
              <AccountCircleIcon />
            </ListItemIcon>
            <ListItemText primary="Meu Perfil" />
          </ListItem>
          <ListItem button onClick={() => navigate('/logout')}>
            <ListItemIcon>
              <ExitToAppIcon />
            </ListItemIcon>
            <ListItemText primary="Sair" />
          </ListItem>
        </List>
      </Drawer>
      <Box
        component="main"
        sx={{
          backgroundColor: (theme) =>
            theme.palette.mode === 'light'
              ? theme.palette.grey[100]
              : theme.palette.grey[900],
          flexGrow: 1,
          height: '100vh',
          overflow: 'auto',
          pt: 8,
        }}
      >
        <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
          {isDashboardRoot ? (
            // Main dashboard content
            <Grid container spacing={3}>
              {/* Stats Cards */}
              <Grid item xs={12} md={3}>
                <StatsCard
                  title="Projetos Ativos"
                  value="12"
                  icon={<AssignmentIcon />}
                  color="#1976d2"
                />
              </Grid>
              <Grid item xs={12} md={3}>
                <StatsCard
                  title="Faturas Pendentes"
                  value="8"
                  icon={<AttachMoneyIcon />}
                  color="#f57c00"
                />
              </Grid>
              <Grid item xs={12} md={3}>
                <StatsCard
                  title="Novos Clientes"
                  value="5"
                  icon={<PeopleIcon />}
                  color="#388e3c"
                />
              </Grid>
              <Grid item xs={12} md={3}>
                <StatsCard
                  title="Pedidos de Material"
                  value="15"
                  icon={<InventoryIcon />}
                  color="#d32f2f"
                />
              </Grid>

              {/* Recent Projects */}
              <Grid item xs={12} md={6}>
                <Paper
                  sx={{
                    p: 2,
                    display: 'flex',
                    flexDirection: 'column',
                    height: 240,
                  }}
                >
                  <RecentProjects />
                </Paper>
              </Grid>

              {/* Upcoming Tasks */}
              <Grid item xs={12} md={6}>
                <Paper
                  sx={{
                    p: 2,
                    display: 'flex',
                    flexDirection: 'column',
                    height: 240,
                  }}
                >
                  <UpcomingTasks />
                </Paper>
              </Grid>

              {/* Financial Summary */}
              <Grid item xs={12}>
                <Paper
                  sx={{
                    p: 2,
                    display: 'flex',
                    flexDirection: 'column',
                    height: 240,
                  }}
                >
                  <FinancialSummary />
                </Paper>
              </Grid>
            </Grid>
          ) : (
            // Render sub-routes
            <Outlet />
          )}
        </Container>
      </Box>
    </Box>
  );
};

export default Dashboard;
